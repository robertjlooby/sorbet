begin
  <emptyTree>
  class <emptyTree><<C <root>>> < ()
    def self.<static-init><<static-init>$CENSORED>(<blk>)
      begin
        <emptyTree>
        ::Sorbet::Private::Static.keep_for_ide(::A)
        <emptyTree>
      end
    end
  end
  class ::A<<C A>> < (::<todo sym>)
    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    <emptyTree>

    def foo(<blk>)
      begin
        :"food"
        :"foos"
      end
    end

    def self.sfoo(<blk>)
      begin
        :"sfood"
        :"sfoos"
      end
    end

    def food(<blk>)
      <emptyTree>
    end

    def foos(<blk>)
      <emptyTree>
    end

    def sfood(<blk>)
      <emptyTree>
    end

    def self.sfoos(<blk>)
      <emptyTree>
    end

    def self.<static-init>(<blk>)
      <emptyTree>
    end
  end
  <emptyTree>
end
